name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build:
    runs-on: ubuntu-latest
    container: registry.gitlab.com/dealmore/dealmore-build-images/lambda:nodejs14.x

    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        run: yarn --frozen-lockfile --cache-folder .yarn

      - name: Build runtime
        run: yarn workspace @dealmore/tf-next-runtime build

      - name: Build tf-next
        run: yarn workspace tf-next build

      - name: Build proxy
        run: yarn workspace @dealmore/terraform-next-proxy build

      - name: Build deploy-trigger
        run: yarn workspace @dealmore/terraform-next-deploy-trigger build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            packages/runtime/dist/
            packages/tf-next/dist/
            packages/proxy/dist.zip
            packages/deploy-trigger/dist.zip
          if-no-files-found: error

  test-integration:
    needs: build
    runs-on: ubuntu-latest
    container: registry.gitlab.com/dealmore/dealmore-build-images/lambda:nodejs14.x
    services:
      s3:
        image: registry.gitlab.com/dealmore/dealmore-build-images:s3-emulator
        env:
          MINIO_ACCESS_KEY: test
          MINIO_SECRET_KEY: testtest

    env:
      MINIO_ACCESS_KEY: test
      MINIO_SECRET_KEY: testtest
      S3_ENDPOINT: s3:9000

    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Yarn install
        run: yarn --frozen-lockfile --cache-folder .yarn

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: packages

      - name: Jest
        run: yarn test

  test-e2e-prepare:
    needs: build
    runs-on: ubuntu-latest
    container: registry.gitlab.com/dealmore/dealmore-build-images/lambda:nodejs14.x
    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Yarn install
        run: yarn --frozen-lockfile --cache-folder .yarn

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: packages

      - name: Build e2e fixtures
        run: yarn test:e2e:prepare

      - name: Upload e2e fixtures
        uses: actions/upload-artifact@v2
        with:
          name: e2e-fixtures
          path: test/fixtures/**/.next-tf/**/*
          if-no-files-found: error

  test-e2e:
    needs: [build, test-e2e-prepare]
    runs-on: ubuntu-latest
    services:
      s3:
        image: registry.gitlab.com/dealmore/dealmore-build-images:s3-emulator
        env:
          MINIO_ACCESS_KEY: test
          MINIO_SECRET_KEY: testtest
        ports:
          - 9000:9000
    env:
      SAM_CLI_TELEMETRY: 0
      # Don't worry these are fake AWS credentials for AWS SAM
      AWS_ACCESS_KEY_ID: ABIAZLJNBT8I3KFOU4NO
      AWS_SECRET_ACCESS_KEY: 4Xt3Rbx4DO21MhK1IHXZXRvVRDuqaQ0Wo5lILA/h
      MINIO_ACCESS_KEY: test
      MINIO_SECRET_KEY: testtest

    steps:
      - name: Setup AWS SAM
        run: |
          brew tap aws/tap
          brew install aws-sam-cli
          sam --version

      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            .yarn
            **/node_modules
          key: ${{ runner.os }}-e2e-${{ hashFiles('yarn.lock') }}

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: packages

      - name: Download prebuilt e2e fixtures
        uses: actions/download-artifact@v2
        with:
          name: e2e-fixtures
          path: test/fixtures

      - name: Install dependencies
        run: yarn --frozen-lockfile --cache-folder .yarn

      - name: Run e2e-test
        run: yarn test:e2e --runInBand

      - name: Output SAM logs
        run: |
          printf "\n\nOutput of sam-local.log:\n"
          cat sam-local.log
          printf "\n\nOutput of sam-api.log:\n"
          cat sam-api.log
